2022-07-16

    + Golang: enabled separate modules for DTO and DAO
    + FieldInfo.ScalarType

2022-07-09

    + dto macro
    + dao macro

2022-05-28

    fixes regarding PHP namespaces.

2022-05-21

    + DataStore_Doctrine_ORM.php

    https://github.com/panedrone/sdm_demo_todolist_php_doctrine

2022-05-12

    + GORM

2022-05-03

    + XML wrappers for VM templates (update XSD files and see the reference "settings.xml")

2022-04-30

    + django.db models

    See -->

    https://github.com/panedrone/sqldalmaker/blob/master/src/resources/settings.xml
    https://github.com/panedrone/sqldalmaker/blob/master/src/resources/data_store.py

2022-04-29

    VM templates for global macros.

2022-04-25

    Rework to allow using "<query-dto-list..." and "<query-dto..." with empty "ref":

    <query-dto-list method="get_orders(dt1, dt2) dto="sa-OrderEx" ref=""/>

    In such cases, "ref" from ""<dto-class..." is used:

     <dto-class name="sa-OrderEx" ref="get_orders.sql"/>

2022-04-23

    + (Flask-)SQLAlchemy "ForeignKey", "index", "unique"

2022-04-22

    Improvements fo Python

2022-04-21

    Fix related to incorrect AI detection in sqlite-jdbc-3.19.3.jar

2022-04-20

    - Fixes for SQLAlchemy + Oracle.

        Re-define identity keys as Integer-s because of auto-detected Float-s are not working:

        <dto-class name="sa-Group" ref="GROUPS">
            <field type="|0:Integer" column="G_ID"/>
        </dto-class>

        ^^ also, specify table names in upper-case to detect primary keys correctly.

        https://docs.sqlalchemy.org/en/14/dialects/oracle.html

    - Fixes of imports.

2022-04-17

    # SQLAlchemy models (update XSD files from the tab 'Admin'):

    ds = DataStore()
    ds.open()

    # orm-way ---------------------------------------------
    # <dto-class name="sqlalchemy-TaskModel" ref="tasks"/>

    tasks = self.ds.session.query(TaskModel).filter(TaskModel.g_id == g_id).all()
    for tt in tasks:
        t: TaskModel = tt
        print(f"{t.t_date}\t{t.t_subject}\n")

    task = self.ds.session.query(TaskModel).get(t_id)
    task.t_subject = t_subject
    ds.commit()

    # raw sql --------------------------------------------
    # <dto-class name="ActorInfo" ref="actor_info.sql"/>

    aa = ds.fetch_all_raw(ActorInfo, [50]) # 50 is film_id
    for a in aa:
        print("\n", a)

2022-04-06

    Navigation from XML to generated files

2022-04-01

    Reworked error handling for Golang

2022-03-30

    Allowed not-PK/FK columns in SQL-shortcuts

2022-03-12

    UI adapted for NetBeans 13

2021-10-01

    [FIX] data_store.go --> _isPtrToNil

2021-09-23

    SQLAlchemy Raw SQL --> data_store_sqlalchemy.py

2021-09-20

    Single data_store.py for sqlite3, mysql.connector, postgresql_psycopg2, and django

2021-09-13

    Disabled IntelliJ warnings about deprecated API usage

2021-08-07

    Disabled Warning -> Do not request resource from classloader using path with leading slash

2021-06-10

    - Go -> return error instead of panic
    - Go -> fix of SQL formatting

2021-05-17

    - IntelliJ -> prevented asking for child nodes when SDM toolbar drop-down is hidden.
    - Kebab-case for field-comment
        <dto-class name="Task" ref="tasks" field-comment="`xml:&quot;{kebab-case(column)}&quot;`"/>

2021-05-10

    New xml attribute "field-comment" to simplify type-comments for Go:

    <dto-class name="Group" ref="get_groups.sql" field-comment="`json:&quot;{snake_case(column)}&quot;`">
        <field type="int64" column="g_id"/>
        <field type="string" column="g_name"/>
        <field type="int64" column="tasks_count"/>
    </dto-class>

    <dto-class name="Task" ref="tasks" field-comment="`json:&quot;{snake_case(column)}&quot;`"/>

    ----- overwride XSD files from plugin GUI -> tab 'Admin'

2021-05-01

    Type-comments for Go

    <dto-class name="Group" ref="get_groups.sql">
        <field type='int64 `json:"g_id"`' column="g_id"/>
        <field type='string `json:"g_name"`' column="g_name"/>
        <field type='int64 `json:"tasks_count"`' column="tasks_count"/>
    </dto-class>

2021-04-01

    - Fixes for JRE 15+
    - Go + Oracle -> SP + implicit RC (multiple implicit RC in one SP are not supported yet)

2021-03-29

    Go + PostgreSQL -> OUT and INOUT parameters

2021-03-23

    Go + Oracle -> UDF returning SYS_REFCURSOR
    Go + Oracle -> SYS_REFCURSOR-s as OUT parameters
    (Not working yet: Go + Oracle -> Implicit SYS_REFCURSOR-s)

2021-03-22

    Go -> SP OUT/INOUT parameters -> Oracle
    Go -> TitleCase (0) or camelCase (1) for method names -> 'settings.xml' -> <dto field-names-mode
    Go -> Oracle INSERT ... INTO... -> implemented fetching of generated value.
    Go -> SP OUT/INOUT parameters -> MS SQL Sever
    Go -> Multiple Result-Sets
    Go -> Transactions

2021-03-15

    Implemented 'type-map' for PHP, Python, Ruby.

2021-03-08

    Solved problem 'Go + DB NULL'.

2021-03-06

    Reworked for standard Python file names.

2021-03-03

    Initial implementation for Go. Tested on SQLite3, Oracle, and SQL Server.
    Update XSD files and check existing XML to conform updates.

2021-01-23

    - 'Validate All' on the tab 'Admin'

2020-12-25

    - Fixes for SP returning Result-Set(s) implicitly

2020-12-22

    - Fixes for C++

2020-12-10

    - Renamed in PHP: queryDto -> queryRow, queryDtoList --> queryRowList

2020-12-10

    - Fixes of CRUD-create (PHP, Java, Python)

2020-12-02

    - DataStoreManagerAndroid.java adapted for new DataStore.java

2020-12-01

    - Further improvements for Java
	
2020-11-17

    - Simplified DataStore.java and DataStoreManagerJDBC.java
    - Generated Java code adapted for new DataStore.java

2020-09-28

    - Added DataStoreManagerJDBC.java

2020-09-21

    - Bugfix of Eclipse IDE tool-bar button

2020-09-14

    - DataStoreManager.java adapted for JSF

2020-09-10

    - separate processing of multiple record-sets returned by MySQL SP

2020-09-07

    - separate processing of multiple ref-cursors returned by Oracle SP

2020-09-06

    - improved RefCursors logic for python + cx_oracle
    - improved RefCursors logic for php + oci8

2020-08-09

    - improved RefCursors logic for python + cx_oracle
    - improved RefCursors logic for php + oci8
    - implemented fetching of last insert id for php + oci8
    - added comments to describe how the mappings were built
    - fixed php -> crud -> read

2020-08-06

    - Fix of 'ref' links in IntelliJ
    - Fix of 'Test Connection' in IntelliJ

2020-08-04

    Added DataStore_oci8.php

2020-08-02

    Added DataStore_cx_Oracle.py

2020-07-06

    Added DataStore_pyodbc_Oracle.py

2020-07-02

    New actions 'Generate' and 'Validate' in IDE tool-bar button
    
2020-06-28

    - Added DataStore_PDO_SQL_Server.php
    - Added DataStore_PDO_Oracle.php

2020-06-27

    - Updated DataStore.java + Apache DbUtils for basic support of PostgreSQL UDF that RETURNS SETOF REFCURSOR.
    - Fix in DataStore_psycopg2.py => exec_dml(...)
    - Fix in DataStore_PDO_PostgreSQL.php => execDml(...)

2020-06-25

    Updated DataStore.php for MySQL to support OUT and INOUT parameters.

2020-06-23

    Updated DataStore.py for psycopg2 to support OUT parameters.
	
2020-06-23

    Updated DataStore.py for MySQL to support OUT parameters.

2020-06-22

    - DataStore.java and DataStoreManager.java for Apache DbUtils adapted to Oracle SYS_REFCURSOR.
    - DataStoreManager.java for Apache DbUtils adapted to use OUT and INOUT parameters of SP.

2020-06-21

    Added PHP/PDO DataStore adapted to use with PostgreSQL.

2020-06-19

    Added DataStore based on psycopg2.

2020-06-16

    Enabled OUT params of SP in pyodbc + SQL Server.

2020-06-04

    Fixes of Python + MySQL example.
    Fixes of jdbc_sql_to_php_str.

2020-05-30

    Fixes for MS SQL Server.

2020-05-19

    Improvements of type-detection for SQL-shortcuts.

2020-05-05

    New approach to map/correlate DTO <==> fetched records.

2020-04-12

    Package of DTO classes is taken into account in Python imports.

2020-02-11

   Added attribute 'pk' to define primary key manually in 'crud' and 'crud-auto': 
	
       <crud-auto dto="Ip2country" table="ip2country" pk="code" />
		
   Update XSD files.
	
2020-01-11

    Fixes of <query... return-type="...".
	
2020-01-07

    DTO fields may be declared in XML even they are missing in metadata. You calculate the values of such fields outside of RDBMS.

2019-12-31
	
    Enabled <crud(-auto) table="my_schema.orders"...

2019-09-30

    Starting from plug-in v.1.90, you can generate and run PHP, Java, and Python code to call stored procedures and functions.
    Review updated implementations of DataStore: 1) PHP + PDO, 2) Java + Apache DbUtils, 3) Python + MySQL Connector/Python.
    Tested with MySQL, Oracle DB, and PostgreSQL. Visit project Website for details.

2019-08-17

    Fixes of DTO navigation in Eclipse.

2019-08-14

    Adapted for xerial PK column names like '[employeeid] asc'.

2019-08-13

    Fixed incorrect commenting in Python and Ruby target code.

2019-08-07

    Fixed incorrect enumeration of root-files.

2019-08-04

    Adapted for new naming of SQL columns in SQLite3 JDBC driver

    [INFO]
    
        Column labels are possible like 'CustomerID:1'.
        To enable this, open 'dto.xsd' of your XML meta-program
        and replace this
        
           <xs:attribute name="column" use="required" type="xs:NCName" />
           
        with this
        
           <xs:attribute name="column" use="required" type="xs:string" /> 
      
2019-08-02

    Fixed incorrect detection of PK for CRUD + SQLite3    
	
2019-01-11

    Fixes for DTO/DAO XML assistants + MySQL.

2018-11-11

    Fixes for DTO/DAO XML assistants + MySQL.

2018-11-07

    - Added an option to exclude views in DTO/DAO assistants.
    - Fixes of C++ formatting in VM.
    - Added example of DataStore class implemented in Qt5 C++.

2018-02-12

    Implemented generation of XML for reading data through FK-s.
	
2018-01-08

    Improvements of error handling and visualization.
    
    To use new event logging, update XSD-files from the tab 'Admin' and add <ide event-log="true"/> to 'settings.xml'.

2017-04-01

    Shortcuts for simple reading data through FK-s:

        '<query-dto-list method="findCustomers(companyName, region)" dto="Customer" ref="customers(CompanyName, Region)"/>'